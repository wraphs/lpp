#lang racket
2345678;cookie wetting time
(+ 1 2)
(+ 1 2 3 4 5)
(remainder (+ (* 3 4) (quotient 4 2)) 3)
(+ (* 2 5) (sin 3) (cos 12))
(/ 2 3);pq nao divide?

(define tres 3)
(* tres 2)
(define soma +)
(soma 1 2)

(let ((x (* 3 3))) x)
(let ((x 3)) (* x 3))
(let ((x (* 2 2)) (y 3)) (+ x y))

(let
    ((x (* 2 2)) (y 3))
  (display (+ x y));so sai com display
  (* 2 x)
  (/ 9 y);so esse valor sai
  )

(let ((altura 12) (largura 20)) (* altura largura));no primeiro arg defino var, no segundo, funcao

(define x 3)
(set! x 1024)
x

(let (
      (value 0))
  (set! value 10)
  value
  )

;////////////////////////////
(define y 2025)
(display "ok")
(newline)

(printf "y = ~s\n" y)

(printf "Valor: ~a, ~a, ~a, ~a\n" 1990 #t y "Hello")

(printf "Outro: ~v, ~v, ~v, ~v\n" 1990 #t y "Hello")

(display "Digite o valor de a: ")
(define a (read))
(display a)
(newline)

(display "Troque o valor de a: ")
(set! a (read))
(display a)
(newline)

(let ((y 0))
  (display "Digite o valor de y: ")
  (set! y (read))
  (printf "Valor de y: '~a'\n" y)
  )

(display "De um valor de altura e largura (numero, ENTER, numero, ENTER): ")
(let ((altura (read)) (largura (read)))
  (printf "valor: ~v"(* altura largura))
   )
